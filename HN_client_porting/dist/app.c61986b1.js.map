{"version":3,"sources":["app.ts"],"names":[],"mappings":"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","file":"app.c61986b1.js","sourceRoot":"..","sourcesContent":["// javascript HN_client app.js => ts 파일로 porting\r\ntype Store = {\r\n  currentPage: number;\r\n  feeds: NewsFeed[];\r\n}\r\n\r\n// 중복되는 타입 하나로 묶이\r\ntype News = {\r\n  id: number;\r\n  time_ago: string;\r\n  title: string;\r\n  url: string;\r\n  user: string;\r\n  content: string;\r\n}\r\n\r\ntype NewsFeed = News & {\r\n  comments_count: number;\r\n  points:number;\r\n  read?: boolean;\r\n}\r\n\r\ntype NewsDetail = News & {\r\n  comments: NewsComment[];\r\n}\r\n\r\ntype NewsComment = News & {\r\n  comments: NewsComment[];\r\n  level: number;\r\n}\r\n\r\n// 변수의 타입을 명시해줘야함 프리미티브 타입/ 객체타입\r\n// 프리미티브 타입 - 문자열, 숫자, boolean, null, undefined\r\nconst container: HTMLElement | null = document.getElementById('root')\r\nconst ajax: XMLHttpRequest = new XMLHttpRequest();\r\nconst content = document.createElement('div')\r\nconst NEWS_URL = 'https://api.hnpwa.com/v0/news/1.json'\r\nconst CONTENT_URL = 'https://api.hnpwa.com/v0/item/@id.json'\r\n\r\n// 공유되는 값\r\nconst store:Store = {\r\n  currentPage: 1,\r\n  feeds: [],\r\n};\r\n\r\nfunction getData<AjaxResponse>(url:string): AjaxResponse {\r\n  ajax.open('GET', url, false);\r\n  ajax.send(); //데이터 들어옴\r\n\r\n  return JSON.parse(ajax.response) // json 파일 객체화\r\n}\r\n\r\nfunction makeFeeds(feeds:NewsFeed[]):NewsFeed[]{\r\n  for(let i = 0; i < feeds.length; i++){\r\n    feeds[i].read = false;\r\n  }\r\n  return feeds\r\n}\r\n\r\nfunction updateView(html:string): void{\r\n  if(container){\r\n    container.innerHTML = html\r\n  }else {\r\n    console.log('최상위 컨테이너가 없습니다.')\r\n  }\r\n}\r\n\r\n\r\nfunction newsFeed(): void{\r\n  let newsFeed:NewsFeed[] = store.feeds;\r\n  const newsList = []\r\n  // template을 사용함으로써 마크업 구조를 정확하게 알 수 있다.\r\n  //  {{__news_feed__}} 와 같은 마킹을 함으로써 어떤 데이터들이 들어가는지 명확하게 알 수 있어 분리를 한다.\r\n  let template = `\r\n     <div class=\"bg-gray-600 min-h-screen\">\r\n      <div class=\"bg-white text-xl\">\r\n        <div class=\"mx-auto px-4\">\r\n          <div class=\"flex justify-between items-center py-6\">\r\n            <div class=\"flex justify-start\">\r\n              <h1 class=\"font-extrabold\">Hacker News</h1>\r\n            </div>\r\n            <div class=\"items-center justify-end\">\r\n              <a href=\"#/page/{{__prev_page__}}\" class=\"text-gray-500\">\r\n                Previous\r\n              </a>\r\n              <a href=\"#/page/{{__next_page__}}\" class=\"text-gray-500 ml-4\">\r\n                Next\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"p-4 text-2xl text-gray-700\">\r\n        {{__news_feed__}}\r\n      </div>\r\n    </div>\r\n  `\r\n\r\n  // getData를 한번만 불러옴\r\n  if(newsFeed.length === 0){\r\n    newsFeed = store.feeds = makeFeeds(getData<NewsFeed[]>(NEWS_URL))\r\n  }\r\n\r\n\r\n  for(let i = (store.currentPage - 1) * 10; i <  (store.currentPage) * 10; i++){\r\n    newsList.push(`\r\n    <div class=\"p-6 ${newsFeed[i].read ? 'bg-red-500' : 'bg-white'} mt-6 rounded-lg shadow-md transition-colors duration-500 hover:bg-green-100\">\r\n      <div class=\"flex\">\r\n        <div class=\"flex-auto\">\r\n          <a href=\"#/show/${newsFeed[i].id}\">${newsFeed[i].title}</a>\r\n        </div>\r\n        <div class=\"text-center text-sm\">\r\n          <div class=\"w-10 text-white bg-green-300 rounded-lg px-0 py-2\">${newsFeed[i].comments_count}</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"flex mt-3\">\r\n        <div class=\"grid grid-cols-3 text-sm text-gray-500\">\r\n          <div><i class=\"fas fa-user mr-1\"></i>${newsFeed[i].user}</div>\r\n          <div><i class=\"fas fa-heart mr-1\"></i>${newsFeed[i].points}</div>\r\n          <div><i class=\"far fa-clock mr-1\"></i>${newsFeed[i].time_ago}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    `)\r\n  }\r\n\r\n  template = template.replace(\" {{__news_feed__}}\", newsList.join(''))\r\n  template = template.replace(\"{{__prev_page__}}\", String(store.currentPage > 1 ? store.currentPage - 1 : 1))\r\n  template = template.replace(\"{{__next_page__}}\", String(store.currentPage < newsFeed.length / 10 ? store.currentPage + 1 : newsFeed.length / 10))\r\n\r\n  updateView(template)\r\n}\r\n\r\nfunction newsDetail(): void{\r\n  // hashchange => URL #부분이 변경되면 이벤트가 시작됩니다.\r\n  //location => location 객체는 브라우저가 기본으로 제공해주는 객체로 주소와 관련된 다양한 정보를 제공해 준다.\r\n  //substring => 쓰고 싶은 index값 부터 뒤에 있는 문자열을 return 해준다. (필요없는 문자열 제거)\r\n  const id = location.hash.substring(7) // #제거\r\n  const newsContent = getData<NewsDetail>(CONTENT_URL.replace('@id', id))\r\n\r\n   let template = `\r\n    <div class=\"bg-gray-600 min-h-screen pb-8\">\r\n      <div class=\"bg-white text-xl\">\r\n        <div class=\"mx-auto px-4\">\r\n          <div class=\"flex justify-between items-center py-6\">\r\n            <div class=\"flex justify-start\">\r\n              <h1 class=\"font-extrabold\">Hacker News</h1>\r\n            </div>\r\n            <div class=\"items-center justify-end\">\r\n              <a href=\"#/page/${store.currentPage}\" class=\"text-gray-500\">\r\n                <i class=\"fa fa-times\"></i>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"h-full border rounded-xl bg-white m-6 p-4 \">\r\n        <h2>${newsContent.title}</h2>\r\n        <div class=\"text-gray-400 h-20\">\r\n          ${newsContent.content}\r\n        </div>\r\n\r\n        {{__comments__}}\r\n\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  for(let i = 0; i < store.feeds.length; i++){\r\n    if(store.feeds[i].id === Number(id)){\r\n      store.feeds[i].read = true;\r\n      break;\r\n    }\r\n  }\r\n\r\n  updateView(template.replace('{{__comments__}}', makeComment(newsContent.comments)));\r\n}\r\n\r\n\r\nfunction makeComment(comments: NewsComment[]): string{\r\n  const commentString = []\r\n  for(let i = 0; i < comments.length; i++) {\r\n    let comment: NewsComment = comments[i]\r\n    commentString.push(`\r\n      <div style=\"padding-left: ${comment.level * 40}px;\" class=\"mt-4\">\r\n        <div class=\"text-gray-400\">\r\n          <i class=\"fa fa-sort-up mr-2\"></i>\r\n          <strong>${comment.user}</strong> ${comment.time_ago}\r\n        </div>\r\n        <p class=\"text-gray-700\">${comment.content}</p>\r\n      </div>\r\n    `);\r\n    // 끝을 알 수 없는 경우 재귀 함수 사용\r\n    if(comment.comments.length > 0){\r\n      commentString.push(makeComment(comment.comments))\r\n    }\r\n  }\r\n  return commentString.join('');\r\n}\r\n\r\n\r\nfunction router(): void{\r\n  const routePath = location.hash;\r\n\r\n  if(routePath == ''){\r\n    newsFeed()\r\n  }else if(routePath.indexOf('#/page/') >= 0){\r\n    store.currentPage = Number(routePath.substring(7))\r\n    newsFeed();\r\n  }else {\r\n    newsDetail()\r\n  }\r\n}\r\n\r\nwindow.addEventListener('hashchange', router);\r\n\r\nrouter();"]}